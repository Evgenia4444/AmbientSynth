{"ast":null,"code":"var container;\nvar audioCtx;\nvar oscillator;\n\nfunction createNewOscillator() {\n  // create web audio api context\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)(); // create Oscillator node\n\n  oscillator = audioCtx.createOscillator();\n  oscillator.type = 'square';\n  oscillator.frequency.setValueAtTime(440, audioCtx.currentTime); // value in hertz\n\n  oscillator.connect(audioCtx.destination); // включаем звук в провод, без этого не будет работать\n\n  oscillator.start();\n}\n\nfunction changeOscillatorFrequency() {\n  var slider = document.getElementById('slider');\n  oscillator.frequency.setValueAtTime(slider.value, audioCtx.currentTime);\n}\n\nfunction createButton(text) {\n  var button = document.createElement('div');\n  button.innerText = text;\n  button.classList.add('button');\n  container.appendChild(button);\n}\n\nfunction changeOscillatorTypeButtons() {\n  var types = ['sign', 'square', 'sawtooth', 'triangle'];\n  types.forEach(type, function (i) {\n    createButton(type);\n  });\n}\n\nfunction createSlider() {\n  var slider = document.createElement('input');\n  slider.type = 'range';\n  slider.min = 0;\n  slider.max = 1000;\n  slider.value = 440;\n  slider.id = 'slider';\n  container.appendChild(slider);\n  slider.addEventListener('input', function () {\n    changeOscillatorFrequency();\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var container = document.getElementById('prototype_2');\n  var frame = document.createElement('div');\n  frame.innerText = 'Art Design & Coding Community';\n  frame.classList.add('frame');\n  container.appendChild(frame);\n  frame.addEventListener('click', function () {\n    createNewOscillator();\n    createSlider();\n    createButton('create');\n  });\n});","map":{"version":3,"names":["container","audioCtx","oscillator","createNewOscillator","window","AudioContext","webkitAudioContext","createOscillator","type","frequency","setValueAtTime","currentTime","connect","destination","start","changeOscillatorFrequency","slider","document","getElementById","value","createButton","text","button","createElement","innerText","classList","add","appendChild","changeOscillatorTypeButtons","types","forEach","i","createSlider","min","max","id","addEventListener","frame"],"sources":["/Users/yevgenia/Desktop/Web-development/ADC-Generative-Art-Boilerplate-2023/app/javascript/packs/prototype_2.js"],"sourcesContent":["let container\nlet audioCtx\nlet oscillator\n \nfunction createNewOscillator() {\n  // create web audio api context\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)()\n\n  // create Oscillator node\n  oscillator = audioCtx.createOscillator()\n\n  oscillator.type = 'square'\n  oscillator.frequency.setValueAtTime(440, audioCtx.currentTime) // value in hertz\n  oscillator.connect(audioCtx.destination) // включаем звук в провод, без этого не будет работать\n  oscillator.start()\n}\n\nfunction changeOscillatorFrequency(){\n  const slider = document.getElementById('slider')\n  oscillator.frequency.setValueAtTime(slider.value, audioCtx.currentTime)\n}\n\n\nfunction createButton(text){\n  const button = document.createElement('div')\n  button.innerText = text\n  button.classList.add('button')\n  container.appendChild(button)\n}\n\nfunction changeOscillatorTypeButtons() {\n  const types = ['sign', 'square', 'sawtooth', 'triangle']\n  types.forEach((type), i => {\n    createButton(type)\n  })\n\n}\n\nfunction createSlider(){\n  const slider = document.createElement('input')\n  slider.type = 'range'  \n  slider.min = 0\n  slider.max = 1000\n  slider.value = 440\n  slider.id = 'slider'\n  container.appendChild(slider)\n\n  slider.addEventListener('input', () => {\n    changeOscillatorFrequency()\n  })\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementById('prototype_2') \n  const frame = document.createElement('div')\n  frame.innerText = 'Art Design & Coding Community'\n  frame.classList.add('frame')\n  container.appendChild(frame)\n  \n  \n\n  frame.addEventListener('click', () => {\n    createNewOscillator()\n    createSlider()\n    createButton('create')\n  })\n\n})\n"],"mappings":"AAAA,IAAIA,SAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,UAAJ;;AAEA,SAASC,mBAAT,GAA+B;EAC7B;EACAF,QAAQ,GAAG,KAAKG,MAAM,CAACC,YAAP,IAAuBD,MAAM,CAACE,kBAAnC,GAAX,CAF6B,CAI7B;;EACAJ,UAAU,GAAGD,QAAQ,CAACM,gBAAT,EAAb;EAEAL,UAAU,CAACM,IAAX,GAAkB,QAAlB;EACAN,UAAU,CAACO,SAAX,CAAqBC,cAArB,CAAoC,GAApC,EAAyCT,QAAQ,CAACU,WAAlD,EAR6B,CAQkC;;EAC/DT,UAAU,CAACU,OAAX,CAAmBX,QAAQ,CAACY,WAA5B,EAT6B,CASY;;EACzCX,UAAU,CAACY,KAAX;AACD;;AAED,SAASC,yBAAT,GAAoC;EAClC,IAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;EACAhB,UAAU,CAACO,SAAX,CAAqBC,cAArB,CAAoCM,MAAM,CAACG,KAA3C,EAAkDlB,QAAQ,CAACU,WAA3D;AACD;;AAGD,SAASS,YAAT,CAAsBC,IAAtB,EAA2B;EACzB,IAAMC,MAAM,GAAGL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAf;EACAD,MAAM,CAACE,SAAP,GAAmBH,IAAnB;EACAC,MAAM,CAACG,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;EACA1B,SAAS,CAAC2B,WAAV,CAAsBL,MAAtB;AACD;;AAED,SAASM,2BAAT,GAAuC;EACrC,IAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,UAA/B,CAAd;EACAA,KAAK,CAACC,OAAN,CAAetB,IAAf,EAAsB,UAAAuB,CAAC,EAAI;IACzBX,YAAY,CAACZ,IAAD,CAAZ;EACD,CAFD;AAID;;AAED,SAASwB,YAAT,GAAuB;EACrB,IAAMhB,MAAM,GAAGC,QAAQ,CAACM,aAAT,CAAuB,OAAvB,CAAf;EACAP,MAAM,CAACR,IAAP,GAAc,OAAd;EACAQ,MAAM,CAACiB,GAAP,GAAa,CAAb;EACAjB,MAAM,CAACkB,GAAP,GAAa,IAAb;EACAlB,MAAM,CAACG,KAAP,GAAe,GAAf;EACAH,MAAM,CAACmB,EAAP,GAAY,QAAZ;EACAnC,SAAS,CAAC2B,WAAV,CAAsBX,MAAtB;EAEAA,MAAM,CAACoB,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;IACrCrB,yBAAyB;EAC1B,CAFD;AAGD;;AAEDE,QAAQ,CAACmB,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;EAClD,IAAMpC,SAAS,GAAGiB,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;EACA,IAAMmB,KAAK,GAAGpB,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAd;EACAc,KAAK,CAACb,SAAN,GAAkB,+BAAlB;EACAa,KAAK,CAACZ,SAAN,CAAgBC,GAAhB,CAAoB,OAApB;EACA1B,SAAS,CAAC2B,WAAV,CAAsBU,KAAtB;EAIAA,KAAK,CAACD,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;IACpCjC,mBAAmB;IACnB6B,YAAY;IACZZ,YAAY,CAAC,QAAD,CAAZ;EACD,CAJD;AAMD,CAfD"},"metadata":{},"sourceType":"module"}