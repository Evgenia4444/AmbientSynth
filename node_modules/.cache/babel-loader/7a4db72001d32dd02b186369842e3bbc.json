{"ast":null,"code":"var _jsxFileName = \"/Users/yevgenia/Desktop/Web-development/AmbientSynth/app/javascript/prototypes/prototype_14/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass';\nimport * as melodySettings from './tunes/melody';\nimport * as pianoSettings from './tunes/piano';\nimport * as drumsSettings from './tunes/drums';\nimport * as birdsSettings from './tunes/birds';\nimport * as forestSettings from './tunes/forest';\nimport * as oceanSettings from './tunes/ocean';\nimport * as fireSettings from './tunes/fire';\nimport ToneSynth from './modules/ToneSynth';\nimport CalmSounds from './modules/CalmSounds';\nimport Widener from './modules/Widener';\nimport HigherSounds from './modules/HigherSounds';\nimport VibratoSound from './modules/VibratoSound';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay; //namepspace bass\n\nvar bassDistortion;\nvar bassAutoWah;\nvar bassAutoFilter;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar melodyDistortion;\nvar melodyAutoWah;\nvar melodyAutoFilter;\nvar forestSynth;\nvar forestPingPongDelay;\nvar forestDistortion;\nvar forestAutoWah;\nvar forestAutoFilter;\nvar forestStereoWidener;\nvar forestTremolo;\nvar forestPitchShift;\nvar oceanSynth;\nvar oceanPingPongDelay;\nvar oceanDistortion;\nvar oceanAutoWah;\nvar oceanAutoFilter;\nvar oceanStereoWidener;\nvar oceanTremolo;\nvar oceanPitchShift;\nvar fireSynth;\nvar firePingPongDelay;\nvar fireDistortion;\nvar fireAutoWah;\nvar fireAutoFilter;\nvar fireStereoWidener;\nvar fireTremolo;\nvar firePitchShift;\nvar fireVibrato;\nvar fireJcReverb;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          forestSettings = _this$state.forestSettings,\n          oceanSettings = _this$state.oceanSettings,\n          fireSettings = _this$state.fireSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassDistortion = new Tone.Distortion(bassSettings.distortion);\n      bassAutoWah = new Tone.AutoWah(bassSettings.autoWah);\n      bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start();\n      bassSynth.chain(bassDistortion, bassAutoWah, bassAutoFilter); // const bassPart = new Tone.Part((time, note) => {\n      //   bassSynth.triggerAttackRelease(\n      //     note.noteName,\n      //     note.duration,\n      //     time,\n      //     note.velocity\n      //   )\n      // }, bassSettings.sequence.steps).start(0)\n      // bassPart.loopEnd = bassSettings.sequence.duration\n      // bassPart.loop = true\n      //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyDistortion = new Tone.Distortion(melodySettings.distortion);\n      melodyAutoWah = new Tone.AutoWah(melodySettings.autoWah);\n      melodyAutoFilter = new Tone.AutoFilter(melodySettings.autoFilter).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyDistortion, melodyAutoWah, melodyAutoFilter, melodyPingPongDelay);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true; //\n      //\n      //\n      //\n\n      forestSynth = new Tone.Synth(forestSettings.synth);\n      forestDistortion = new Tone.Distortion(forestSettings.distortion);\n      forestAutoWah = new Tone.AutoWah(forestSettings.autoWah);\n      forestAutoFilter = new Tone.AutoFilter(forestSettings.autoFilter).start();\n      forestPingPongDelay = new Tone.PingPongDelay(forestSettings.pingPongDelay).toDestination();\n      forestStereoWidener = new Tone.StereoWidener(forestSettings.stereoWidener);\n      forestTremolo = new Tone.Tremolo(forestSettings.tremolo);\n      forestPitchShift = new Tone.PitchShift(forestSettings.pitchShift);\n      forestSynth.chain(forestDistortion, forestAutoWah, forestAutoFilter, forestStereoWidener, forestTremolo, forestPitchShift, forestPingPongDelay);\n      var forestPart = new Tone.Part(function (time, note) {\n        forestSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, forestSettings.sequence.steps).start(0);\n      forestPart.loopEnd = forestSettings.sequence.duration;\n      forestPart.loop = true; //\n      //\n      //\n      //\n\n      oceanSynth = new Tone.Synth(oceanSettings.synth);\n      oceanDistortion = new Tone.Distortion(oceanSettings.distortion);\n      oceanAutoWah = new Tone.AutoWah(oceanSettings.autoWah);\n      oceanAutoFilter = new Tone.AutoFilter(oceanSettings.autoFilter).start();\n      oceanPingPongDelay = new Tone.PingPongDelay(oceanSettings.pingPongDelay).toDestination();\n      oceanStereoWidener = new Tone.StereoWidener(oceanSettings.stereoWidener);\n      oceanTremolo = new Tone.Tremolo(oceanSettings.tremolo);\n      oceanPitchShift = new Tone.PitchShift(oceanSettings.pitchShift);\n      oceanSynth.chain(oceanDistortion, oceanAutoWah, oceanAutoFilter, oceanStereoWidener, oceanTremolo, oceanPitchShift, oceanPingPongDelay);\n      var oceanPart = new Tone.Part(function (time, note) {\n        oceanSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, oceanSettings.sequence.steps).start(0);\n      oceanPart.loopEnd = oceanSettings.sequence.duration;\n      oceanPart.loop = true; //\n      //\n      //\n\n      fireSynth = new Tone.Synth(fireSettings.synth);\n      fireDistortion = new Tone.Distortion(fireSettings.distortion);\n      fireAutoWah = new Tone.AutoWah(fireSettings.autoWah);\n      fireAutoFilter = new Tone.AutoFilter(fireSettings.autoFilter).start();\n      firePingPongDelay = new Tone.PingPongDelay(fireSettings.pingPongDelay).toDestination();\n      fireStereoWidener = new Tone.StereoWidener(fireSettings.stereoWidener);\n      fireTremolo = new Tone.Tremolo(fireSettings.tremolo);\n      firePitchShift = new Tone.PitchShift(fireSettings.pitchShift);\n      fireVibrato = new Tone.Vibrato(fireSettings.vibrato);\n      fireJcReverb = new Tone.JCReverb(fireSettings.jcReverb);\n      fireSynth.chain(fireDistortion, fireAutoWah, fireAutoFilter, fireStereoWidener, fireTremolo, firePitchShift, fireVibrato, fireJcReverb, firePingPongDelay);\n      var firePart = new Tone.Part(function (time, note) {\n        fireSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, fireSettings.sequence.steps).start(0);\n      firePart.loopEnd = fireSettings.sequence.duration;\n      firePart.loop = true; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: \"00001-Linn-9000-BassDrumrum1.mp3\",\n          A2: \"00020-Linn-9000-Tom-1.mp3\",\n          A3: \"looperman-l-2989317-0302008-dark-ambient-piano-blackforestbeats.wav\",\n          A4: \"vinyl-hiss-5862.mp3\",\n          A5: \"00048-Vermona-DRM1-MK3-BassDrum25.mp3\",\n          A6: \"00016-Linn-9000-Snare-2.mp3\",\n          A7: \"lofi-sad-beat.mp3\",\n          A8: \"mixkit-little-birds-singing-in-the-trees-17.wav\"\n        },\n        baseUrl: \"http://localhost:3000/samples/\"\n      }).toDestination();\n      var pianoPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, pianoSettings.sequence.steps).start(0);\n      pianoPart.loopEnd = pianoSettings.sequence.duration;\n      pianoPart.loop = true; // //\n\n      var birdsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, birdsSettings.sequence.steps).start(0);\n      birdsPart.loopEnd = birdsSettings.sequence.duration;\n      birdsPart.loop = true; //\n      //\n      // const drumsPart = new Tone.Part((time, note) => {\n      //   sampler.triggerAttackRelease(\n      //     note.noteName,\n      //     note.duration,\n      //     time,\n      //     note.velocity\n      //   )\n      // }, drumsSettings.sequence.steps).start(0)\n      // drumsPart.loopEnd = drumsSettings.sequence.duration\n      // drumsPart.loop = true\n      // //\n\n      Tone.Transport.start();\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'distortionWet') {\n        bassDistortion.wet.value = value;\n        bassSettings.distortion.wet = value;\n      } else if (property === 'autoWahWet') {\n        bassAutoWah.wet.value = value;\n        bassSettings.autoWah.wet = value;\n      } else if (property === 'autoFilterWet') {\n        bassAutoFilter.wet.value = value;\n        bassSettings.autoFilter.wet = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'distortionWet') {\n        melodyDistortion.wet.value = value;\n        melodySettings.distortion.wet = value;\n      } else if (property === 'autoWahWet') {\n        melodyAutoWah.wet.value = value;\n        melodySettings.autoWah.wet = value;\n      } else if (property === 'autoFilterWet') {\n        melodyAutoFilter.wet.value = value;\n        melodySettings.autoFilter.wet = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleForestValueChange = function (property, value) {\n      var forestSettings = _this.state.forestSettings;\n\n      if (property === 'synthType') {\n        forestSynth.oscillator.type = value;\n        forestSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        forestSynth.envelope.attack = value;\n        forestSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        forestSynth.envelope.decay = value;\n        forestSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        forestSynth.envelope.sustain = value;\n        forestSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        forestSynth.envelope.release = value;\n        forestSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        forestPingPongDelay.wet.value = value;\n        forestSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        forestChorus.wet.value = value;\n        forestSettings.chorus.wet = value;\n      } else if (property === 'distortionWet') {\n        forestDistortion.wet.value = value;\n        forestSettings.distortion.wet = value;\n      } else if (property === 'autoWahWet') {\n        forestAutoWah.wet.value = value;\n        forestSettings.autoWah.wet = value;\n      } else if (property === 'autoFilterWet') {\n        forestAutoFilter.wet.value = value;\n        forestSettings.autoFilter.wet = value;\n      } else if (property === 'stereoWidenerWet') {\n        forestStereoWidener.wet.value = value;\n        forestSettings.stereoWidener.wet = value;\n      } else if (property === 'tremoloWet') {\n        forestTremolo.wet.value = value;\n        forestSettings.tremolo.wet = value;\n      } else if (property === 'pitchShiftWet') {\n        forestPitchShift.wet.value = value;\n        forestSettings.pitchShift.wet = value;\n      }\n\n      _this.setState({\n        forestSettings: forestSettings\n      });\n    };\n\n    _this.handleOceanValueChange = function (property, value) {\n      var oceanSettings = _this.state.oceanSettings;\n\n      if (property === 'synthType') {\n        oceanSynth.oscillator.type = value;\n        oceanSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        oceanSynth.envelope.attack = value;\n        oceanSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        oceanSynth.envelope.decay = value;\n        oceanSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        oceanSynth.envelope.sustain = value;\n        oceanSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        oceanSynth.envelope.release = value;\n        oceanSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        oceanPingPongDelay.wet.value = value;\n        oceanSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        oceanChorus.wet.value = value;\n        oceanSettings.chorus.wet = value;\n      } else if (property === 'distortionWet') {\n        oceanDistortion.wet.value = value;\n        oceanSettings.distortion.wet = value;\n      } else if (property === 'autoWahWet') {\n        oceanAutoWah.wet.value = value;\n        oceanSettings.autoWah.wet = value;\n      } else if (property === 'autoFilterWet') {\n        oceanAutoFilter.wet.value = value;\n        oceanSettings.autoFilter.wet = value;\n      } else if (property === 'stereoWidenerWet') {\n        oceanStereoWidener.wet.value = value;\n        oceanSettings.stereoWidener.wet = value;\n      } else if (property === 'tremoloWet') {\n        oceanTremolo.wet.value = value;\n        oceanSettings.tremolo.wet = value;\n      } else if (property === 'pitchShiftWet') {\n        oceanPitchShift.wet.value = value;\n        oceanSettings.pitchShift.wet = value;\n      }\n\n      _this.setState({\n        forestSettings: forestSettings\n      });\n    };\n\n    _this.handleFireValueChange = function (property, value) {\n      var fireSettings = _this.state.fireSettings;\n\n      if (property === 'synthType') {\n        fireSynth.oscillator.type = value;\n        fireSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        fireSynth.envelope.attack = value;\n        fireSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        fireSynth.envelope.decay = value;\n        fireSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        fireSynth.envelope.sustain = value;\n        fireSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        fireSynth.envelope.release = value;\n        fireSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        firePingPongDelay.wet.value = value;\n        fireSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        fireChorus.wet.value = value;\n        fireSettings.chorus.wet = value;\n      } else if (property === 'distortionWet') {\n        fireDistortion.wet.value = value;\n        fireSettings.distortion.wet = value;\n      } else if (property === 'autoWahWet') {\n        fireAutoWah.wet.value = value;\n        fireSettings.autoWah.wet = value;\n      } else if (property === 'autoFilterWet') {\n        fireAutoFilter.wet.value = value;\n        fireSettings.autoFilter.wet = value;\n      } else if (property === 'pitchShiftWet') {\n        firePitchShift.wet.value = value;\n        fireSettings.pitchShift.wet = value;\n      } else if (property === 'vibratoWet') {\n        fireVibrato.wet.value = value;\n        fireSettings.vibrato.wet = value;\n      } else if (property === 'jcReverbWet') {\n        fireJcReverb.wet.value = value;\n        fireSettings.jcReverb.wet = value;\n      }\n\n      _this.setState({\n        fireSettings: fireSettings\n      });\n    };\n\n    _this.state = {\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      forestSettings: forestSettings,\n      oceanSettings: oceanSettings,\n      fireSettings: fireSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          forestSettings = _this$state2.forestSettings,\n          oceanSettings = _this$state2.oceanSettings,\n          fireSettings = _this$state2.fireSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Ambient Synth\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"firstSynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }, \"Fire\"), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: fireSettings,\n        handleValueChange: this.handleFireValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(VibratoSound, {\n        settings: fireSettings,\n        handleValueChange: this.handleFireValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"secondSynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 9\n        }\n      }, \"Wind\"), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CalmSounds, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 12\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"firstSynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }\n      }, \"Forest\"), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: forestSettings,\n        handleValueChange: this.handleForestValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(CalmSounds, {\n        settings: forestSettings,\n        handleValueChange: this.handleForestValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Widener, {\n        settings: forestSettings,\n        handleValueChange: this.handleForestValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(HigherSounds, {\n        settings: forestSettings,\n        handleValueChange: this.handleForestValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 16\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"secondSynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }\n      }, \"Ocean\"), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: oceanSettings,\n        handleValueChange: this.handleOceanValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(CalmSounds, {\n        settings: oceanSettings,\n        handleValueChange: this.handleOceanValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Widener, {\n        settings: oceanSettings,\n        handleValueChange: this.handleOceanValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(HigherSounds, {\n        settings: oceanSettings,\n        handleValueChange: this.handleOceanValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 16\n        }\n      }))));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","pianoSettings","drumsSettings","birdsSettings","forestSettings","oceanSettings","fireSettings","ToneSynth","CalmSounds","Widener","HigherSounds","VibratoSound","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","bassDistortion","bassAutoWah","bassAutoFilter","melodySynth","melodyChorus","melodyPingPongDelay","melodyDistortion","melodyAutoWah","melodyAutoFilter","forestSynth","forestPingPongDelay","forestDistortion","forestAutoWah","forestAutoFilter","forestStereoWidener","forestTremolo","forestPitchShift","oceanSynth","oceanPingPongDelay","oceanDistortion","oceanAutoWah","oceanAutoFilter","oceanStereoWidener","oceanTremolo","oceanPitchShift","fireSynth","firePingPongDelay","fireDistortion","fireAutoWah","fireAutoFilter","fireStereoWidener","fireTremolo","firePitchShift","fireVibrato","fireJcReverb","Container","props","handleStart","state","Synth","synth","Distortion","distortion","AutoWah","autoWah","AutoFilter","autoFilter","start","chain","Chorus","chorus","PingPongDelay","pingPongDelay","toDestination","melodyPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","StereoWidener","stereoWidener","Tremolo","tremolo","PitchShift","pitchShift","forestPart","oceanPart","Vibrato","vibrato","JCReverb","jcReverb","firePart","sampler","Sampler","urls","A1","A2","A3","A4","A5","A6","A7","A8","baseUrl","pianoPart","birdsPart","Transport","handleBassValueChange","property","value","oscillator","type","envelope","decay","release","wet","setState","handleMelodyValueChange","attack","sustain","handleForestValueChange","forestChorus","handleOceanValueChange","oceanChorus","handleFireValueChange","fireChorus"],"sources":["/Users/yevgenia/Desktop/Web-development/AmbientSynth/app/javascript/prototypes/prototype_14/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass'\nimport * as melodySettings from './tunes/melody'\nimport * as pianoSettings from './tunes/piano'\nimport * as drumsSettings from './tunes/drums'\nimport * as birdsSettings from './tunes/birds'\nimport * as forestSettings from './tunes/forest'\nimport * as oceanSettings from './tunes/ocean'\nimport * as fireSettings from './tunes/fire'\n\nimport ToneSynth from './modules/ToneSynth'\nimport CalmSounds from './modules/CalmSounds'\nimport Widener from './modules/Widener'\nimport HigherSounds from './modules/HigherSounds'\nimport VibratoSound from './modules/VibratoSound'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay //namepspace bass\nlet bassDistortion\nlet bassAutoWah\nlet bassAutoFilter\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\nlet melodyDistortion\nlet melodyAutoWah\nlet melodyAutoFilter\n\n\nlet forestSynth\nlet forestPingPongDelay\nlet forestDistortion\nlet forestAutoWah\nlet forestAutoFilter\nlet forestStereoWidener\nlet forestTremolo\nlet forestPitchShift\n\nlet oceanSynth\nlet oceanPingPongDelay\nlet oceanDistortion\nlet oceanAutoWah\nlet oceanAutoFilter\nlet oceanStereoWidener\nlet oceanTremolo\nlet oceanPitchShift\n\nlet fireSynth\nlet firePingPongDelay\nlet fireDistortion\nlet fireAutoWah\nlet fireAutoFilter\nlet fireStereoWidener\nlet fireTremolo\nlet firePitchShift\nlet fireVibrato\nlet fireJcReverb\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n   \n\n   \n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      forestSettings,\n      oceanSettings, \n      fireSettings\n   \n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, forestSettings, oceanSettings, fireSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassDistortion = new Tone.Distortion(bassSettings.distortion)\n    bassAutoWah = new Tone.AutoWah(bassSettings.autoWah)\n    bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start()\n    bassSynth.chain(bassDistortion, bassAutoWah, bassAutoFilter)\n\n    \n\n    // const bassPart = new Tone.Part((time, note) => {\n    //   bassSynth.triggerAttackRelease(\n    //     note.noteName,\n    //     note.duration,\n    //     time,\n    //     note.velocity\n    //   )\n    // }, bassSettings.sequence.steps).start(0)\n\n    // bassPart.loopEnd = bassSettings.sequence.duration\n    // bassPart.loop = true\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyDistortion = new Tone.Distortion(melodySettings.distortion)\n    melodyAutoWah = new Tone.AutoWah(melodySettings.autoWah)\n    melodyAutoFilter = new Tone.AutoFilter(melodySettings.autoFilter).start()\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyDistortion, melodyAutoWah, melodyAutoFilter, melodyPingPongDelay)\n\n    \n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n\n\n    //\n    //\n    forestSynth = new Tone.Synth(forestSettings.synth)\n    forestDistortion = new Tone.Distortion(forestSettings.distortion)\n    forestAutoWah = new Tone.AutoWah(forestSettings.autoWah)\n    forestAutoFilter = new Tone.AutoFilter(forestSettings.autoFilter).start()\n    forestPingPongDelay = new Tone.PingPongDelay(\n      forestSettings.pingPongDelay\n    ).toDestination()\n    forestStereoWidener = new Tone.StereoWidener(forestSettings.stereoWidener)\n    forestTremolo = new Tone.Tremolo(forestSettings.tremolo)\n    forestPitchShift = new Tone.PitchShift(forestSettings.pitchShift)\n\n    forestSynth.chain( forestDistortion, forestAutoWah, forestAutoFilter, forestStereoWidener, \n                       forestTremolo, forestPitchShift, forestPingPongDelay)\n\n    const forestPart = new Tone.Part((time, note) => {\n      forestSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, forestSettings.sequence.steps).start(0)\n\n    forestPart.loopEnd = forestSettings.sequence.duration\n    forestPart.loop = true\n    //\n    //\n\n    //\n    //\n    oceanSynth = new Tone.Synth(oceanSettings.synth)\n    oceanDistortion = new Tone.Distortion(oceanSettings.distortion)\n    oceanAutoWah = new Tone.AutoWah(oceanSettings.autoWah)\n    oceanAutoFilter = new Tone.AutoFilter(oceanSettings.autoFilter).start()\n    oceanPingPongDelay = new Tone.PingPongDelay(\n      oceanSettings.pingPongDelay\n    ).toDestination()\n    oceanStereoWidener = new Tone.StereoWidener(oceanSettings.stereoWidener)\n    oceanTremolo = new Tone.Tremolo(oceanSettings.tremolo)\n    oceanPitchShift = new Tone.PitchShift(oceanSettings.pitchShift)\n\n    oceanSynth.chain( oceanDistortion, oceanAutoWah, oceanAutoFilter, oceanStereoWidener, \n                       oceanTremolo, oceanPitchShift, oceanPingPongDelay)\n\n    const oceanPart = new Tone.Part((time, note) => {\n      oceanSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, oceanSettings.sequence.steps).start(0)\n\n    oceanPart.loopEnd = oceanSettings.sequence.duration\n    oceanPart.loop = true\n    \n    //\n\n    //\n    //\n    fireSynth = new Tone.Synth(fireSettings.synth)\n    fireDistortion = new Tone.Distortion(fireSettings.distortion)\n    fireAutoWah = new Tone.AutoWah(fireSettings.autoWah)\n    fireAutoFilter = new Tone.AutoFilter(fireSettings.autoFilter).start()\n    firePingPongDelay = new Tone.PingPongDelay(\n      fireSettings.pingPongDelay\n    ).toDestination()\n    fireStereoWidener = new Tone.StereoWidener(fireSettings.stereoWidener)\n    fireTremolo = new Tone.Tremolo(fireSettings.tremolo)\n    firePitchShift = new Tone.PitchShift(fireSettings.pitchShift)\n    fireVibrato = new Tone.Vibrato(fireSettings.vibrato)\n    fireJcReverb = new Tone.JCReverb(fireSettings.jcReverb)\n    fireSynth.chain( fireDistortion, fireAutoWah, fireAutoFilter, fireStereoWidener, \n                       fireTremolo, firePitchShift, fireVibrato, fireJcReverb, firePingPongDelay)\n\n    const firePart = new Tone.Part((time, note) => {\n      fireSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, fireSettings.sequence.steps).start(0)\n\n    firePart.loopEnd = fireSettings.sequence.duration\n    firePart.loop = true\n    //\n    //\n\n\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: \"00001-Linn-9000-BassDrumrum1.mp3\",   \n        A2: \"00020-Linn-9000-Tom-1.mp3\",\n        A3: \"looperman-l-2989317-0302008-dark-ambient-piano-blackforestbeats.wav\",\n        A4: \"vinyl-hiss-5862.mp3\",\n        A5: \"00048-Vermona-DRM1-MK3-BassDrum25.mp3\",\n        A6: \"00016-Linn-9000-Snare-2.mp3\",\n        A7: \"lofi-sad-beat.mp3\",\n        A8: \"mixkit-little-birds-singing-in-the-trees-17.wav\",\n      },\n      baseUrl: \"http://localhost:3000/samples/\",\n     \n    }).toDestination();\n\n    const pianoPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, pianoSettings.sequence.steps).start(0)\n\n    pianoPart.loopEnd = pianoSettings.sequence.duration\n    pianoPart.loop = true\n    // //\n\n    const birdsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, birdsSettings.sequence.steps).start(0)\n\n    birdsPart.loopEnd = birdsSettings.sequence.duration\n    birdsPart.loop = true\n    //\n    //\n\n\n    // const drumsPart = new Tone.Part((time, note) => {\n    //   sampler.triggerAttackRelease(\n    //     note.noteName,\n    //     note.duration,\n    //     time,\n    //     note.velocity\n    //   )\n    // }, drumsSettings.sequence.steps).start(0)\n\n    // drumsPart.loopEnd = drumsSettings.sequence.duration\n    // drumsPart.loop = true\n    // //\n\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'distortionWet') {\n      bassDistortion.wet.value = value\n      bassSettings.distortion.wet = value\n    } else if (property === 'autoWahWet') {\n      bassAutoWah.wet.value = value\n      bassSettings.autoWah.wet = value\n    } else if (property === 'autoFilterWet') {\n      bassAutoFilter.wet.value = value\n      bassSettings.autoFilter.wet = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    }else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'distortionWet') {\n      melodyDistortion.wet.value = value\n      melodySettings.distortion.wet = value\n    } else if (property === 'autoWahWet') {\n      melodyAutoWah.wet.value = value\n      melodySettings.autoWah.wet = value\n    } else if (property === 'autoFilterWet') {\n      melodyAutoFilter.wet.value = value\n      melodySettings.autoFilter.wet = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleForestValueChange = (property, value) => {\n    const { forestSettings } = this.state\n\n    if (property === 'synthType') {\n      forestSynth.oscillator.type = value\n      forestSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      forestSynth.envelope.attack = value\n      forestSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      forestSynth.envelope.decay = value\n      forestSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      forestSynth.envelope.sustain = value\n      forestSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      forestSynth.envelope.release = value\n      forestSettings.synth.envelope.release = value\n    }else if (property === 'pingPongDelayWet') {\n      forestPingPongDelay.wet.value = value\n      forestSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      forestChorus.wet.value = value\n      forestSettings.chorus.wet = value\n    } else if (property === 'distortionWet') {\n      forestDistortion.wet.value = value\n      forestSettings.distortion.wet = value\n    } else if (property === 'autoWahWet') {\n      forestAutoWah.wet.value = value\n      forestSettings.autoWah.wet = value\n    } else if (property === 'autoFilterWet') {\n      forestAutoFilter.wet.value = value\n      forestSettings.autoFilter.wet = value\n    } else if (property === 'stereoWidenerWet') {\n      forestStereoWidener.wet.value = value\n      forestSettings.stereoWidener.wet = value\n    } else if (property === 'tremoloWet') {\n      forestTremolo.wet.value = value\n      forestSettings.tremolo.wet = value\n    } else if (property === 'pitchShiftWet') {\n      forestPitchShift.wet.value = value\n      forestSettings.pitchShift.wet = value\n    }\n\n    this.setState({\n      forestSettings\n    })\n  }\n\n  handleOceanValueChange = (property, value) => {\n    const { oceanSettings } = this.state\n\n    if (property === 'synthType') {\n      oceanSynth.oscillator.type = value\n      oceanSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      oceanSynth.envelope.attack = value\n      oceanSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      oceanSynth.envelope.decay = value\n      oceanSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      oceanSynth.envelope.sustain = value\n      oceanSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      oceanSynth.envelope.release = value\n      oceanSettings.synth.envelope.release = value\n    }else if (property === 'pingPongDelayWet') {\n      oceanPingPongDelay.wet.value = value\n      oceanSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      oceanChorus.wet.value = value\n      oceanSettings.chorus.wet = value\n    } else if (property === 'distortionWet') {\n      oceanDistortion.wet.value = value\n      oceanSettings.distortion.wet = value\n    } else if (property === 'autoWahWet') {\n      oceanAutoWah.wet.value = value\n      oceanSettings.autoWah.wet = value\n    } else if (property === 'autoFilterWet') {\n      oceanAutoFilter.wet.value = value\n      oceanSettings.autoFilter.wet = value\n    } else if (property === 'stereoWidenerWet') {\n      oceanStereoWidener.wet.value = value\n      oceanSettings.stereoWidener.wet = value\n    } else if (property === 'tremoloWet') {\n      oceanTremolo.wet.value = value\n      oceanSettings.tremolo.wet = value\n    } else if (property === 'pitchShiftWet') {\n      oceanPitchShift.wet.value = value\n      oceanSettings.pitchShift.wet = value\n    }\n\n    this.setState({\n      forestSettings\n    })\n  }\n\n\n  handleFireValueChange = (property, value) => {\n    const { fireSettings } = this.state\n\n    if (property === 'synthType') {\n      fireSynth.oscillator.type = value\n      fireSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      fireSynth.envelope.attack = value\n      fireSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      fireSynth.envelope.decay = value\n      fireSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      fireSynth.envelope.sustain = value\n      fireSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      fireSynth.envelope.release = value\n      fireSettings.synth.envelope.release = value\n    }else if (property === 'pingPongDelayWet') {\n      firePingPongDelay.wet.value = value\n      fireSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      fireChorus.wet.value = value\n      fireSettings.chorus.wet = value\n    } else if (property === 'distortionWet') {\n      fireDistortion.wet.value = value\n      fireSettings.distortion.wet = value\n    } else if (property === 'autoWahWet') {\n      fireAutoWah.wet.value = value\n      fireSettings.autoWah.wet = value\n    } else if (property === 'autoFilterWet') {\n      fireAutoFilter.wet.value = value\n      fireSettings.autoFilter.wet = value\n    } else if (property === 'pitchShiftWet') {\n      firePitchShift.wet.value = value\n      fireSettings.pitchShift.wet = value\n    } else if (property === 'vibratoWet') {\n      fireVibrato.wet.value = value\n      fireSettings.vibrato.wet = value\n    } else if (property === 'jcReverbWet') {\n      fireJcReverb.wet.value = value\n      fireSettings.jcReverb.wet = value\n    }\n\n    this.setState({\n      fireSettings\n    })\n  }\n\n\n\n  render() {\n    const { bassSettings, melodySettings, forestSettings, oceanSettings, fireSettings } = this.state\n\n\n    return (\n      <div className=\"Container\">\n\n\n        {/* <div className='header'>\n         <h1>Ambient Synth</h1>\n        </div> */}\n          <SC_Button\n            text=\"Ambient Synth\"\n            handleClick={this.handleStart}\n          />\n        <div className='wrapper'>\n      \n        <div className='firstSynthContainer'>\n          <h2>Fire</h2>\n            <ToneSynth \n              settings={fireSettings}\n              handleValueChange={this.handleFireValueChange} \n            />\n\n            <VibratoSound\n               settings={fireSettings}\n               handleValueChange={this.handleFireValueChange}\n            />\n\n        </div>\n      \n        <div className='secondSynthContainer'>\n        <h2>Wind</h2>\n          <ToneSynth \n            settings={melodySettings}\n            handleValueChange={this.handleMelodyValueChange} \n          />\n           <CalmSounds \n               settings={melodySettings}\n               handleValueChange={this.handleMelodyValueChange}\n            />\n        \n        </div>\n        </div>\n\n        <div className='wrapper'>\n      \n          <div className='firstSynthContainer'>\n          <h2>Forest</h2>\n              <ToneSynth \n                settings={forestSettings}\n                handleValueChange={this.handleForestValueChange} \n              />\n              <CalmSounds \n                settings={forestSettings}\n                handleValueChange={this.handleForestValueChange}\n              />\n              <Widener \n                settings={forestSettings}\n                handleValueChange={this.handleForestValueChange}\n              />\n               <HigherSounds \n                settings={forestSettings}\n                handleValueChange={this.handleForestValueChange}\n              />\n\n          </div>\n        \n          <div className='secondSynthContainer'>\n          <h2>Ocean</h2>\n              <ToneSynth \n                settings={oceanSettings}\n                handleValueChange={this.handleOceanValueChange} \n              />\n              <CalmSounds \n                settings={oceanSettings}\n                handleValueChange={this.handleOceanValueChange}\n              />\n              <Widener \n                settings={oceanSettings}\n                handleValueChange={this.handleOceanValueChange}\n              />\n               <HigherSounds \n                settings={oceanSettings}\n                handleValueChange={this.handleOceanValueChange}\n              />\n\n      \n      </div>\n      </div>\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}